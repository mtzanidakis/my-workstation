- hosts: all
  become: true
  vars:
    filesdir: ../files/k8s
    username: "{{ lookup('env', 'USERNAME') }}"
    homedir: "/home/{{ username }}"
    kubectx_version: 0.9.4
    kubectx_checksum: sha256:db5a48e85ff4d8c6fa947e3021e11ba4376f9588dd5fa779a80ed5c18287db22
    kubectx_bin_checksum: 9317271d6dd7c771c844d9d3b37a7e56c5d74c6e53366aa230ced3fb69d128bc
    kubectx_comp_checksum: sha256:410b5315f7a91b1c210cbc86c9cc4dda065f2ac180b490f3ebbf7e764ab6b470
    kubens_checksum: sha256:8b3672961fb15f8b87d5793af8bd3c1cca52c016596fbf57c46ab4ef39265fcd
    kubens_bin_checksum: cc376ced21b441efe4d61685830e0ff3ade194c303216d1ca08b72073c556d44
    kubens_comp_checksum: sha256:084c226035af951e582020b2bc055a6521929ee54d8942b4d19577e5d45fd8f7
    k9s_version: 0.27.4
    k9s_checksum: sha256:e507831ebd5f9b8c0380f212669f352c6e34cb760c916b498babae8be83c4392
    k9s_bin_checksum: da2a3716809fd22e8ce814719bab7044f1fac54e13f726fc327f6accd5f839a6
    talosctl_version: 1.3.2
    talosctl_checksum: sha256:a3589f3c54b5ff767b15c6343c5183e51e34a58c439e8ec340d34fed38143871

  tasks:
    - name: enable Google Cloud SDK repo
      ansible.builtin.yum_repository:
        name: google-cloud-cli
        description: Google Cloud CLI
        file: google-cloud-sdk
        baseurl: https://packages.cloud.google.com/yum/repos/cloud-sdk-el8-x86_64
        gpgkey:
          - https://packages.cloud.google.com/yum/doc/yum-key.gpg
          - https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
        gpgcheck: yes

    - name: install google-cloud-cli, helm & kubectl
      ansible.builtin.dnf:
        name:
          - google-cloud-cli
          - google-cloud-cli-gke-gcloud-auth-plugin
          - helm
          - kubectl
        state: present

    - name: check if kubectx is installed
      ansible.builtin.stat:
        path: /usr/local/bin/kubectx
        checksum_algorithm: sha256
      register: localbinkubectx

    - name: "download kubectx {{ kubectx_version }}"
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/v{{ kubectx_version }}/kubectx_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        dest: "/tmp/kubectx_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        mode: 0644
        checksum: "{{ kubectx_checksum }}"
      when: localbinkubectx.stat.checksum is not defined or localbinkubectx.stat.checksum != kubectx_bin_checksum

    - name: "unpack kubectx {{ kubectx_version }}"
      ansible.builtin.unarchive:
        src: "/tmp/kubectx_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        dest: /usr/local/bin
        include: kubectx
        owner: root
        group: root
      when: localbinkubectx.stat.checksum is not defined or localbinkubectx.stat.checksum != kubectx_bin_checksum

    - name: "delete downloaded kubectx {{ kubectx_version }} tarball"
      ansible.builtin.file:
        name: "/tmp/kubectx_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        state: absent
      when: localbinkubectx.stat.checksum is not defined or localbinkubectx.stat.checksum != kubectx_bin_checksum

    - name: "download kubectx zsh completion"
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/_kubectx.zsh"
        dest: "/usr/share/zsh/site-functions"
        mode: 0644
        checksum: "{{ kubectx_comp_checksum }}"

    - name: check if kubens is installed
      ansible.builtin.stat:
        path: /usr/local/bin/kubens
        checksum_algorithm: sha256
      register: localbinkubens

    - name: "download kubens {{ kubectx_version }}"
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/v{{ kubectx_version }}/kubens_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        dest: "/tmp/kubens_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        mode: 0644
        checksum: "{{ kubens_checksum }}"
      when: localbinkubens.stat.checksum is not defined or localbinkubens.stat.checksum != kubens_bin_checksum

    - name: "unpack kubens {{ kubectx_version }}"
      ansible.builtin.unarchive:
        src: "/tmp/kubens_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        dest: /usr/local/bin
        mode: 0755
        include: kubens
        owner: root
        group: root
      when: localbinkubens.stat.checksum is not defined or localbinkubens.stat.checksum != kubens_bin_checksum

    - name: "delete downloaded kubens {{ kubectx_version }} tarball"
      ansible.builtin.file:
        name: "/tmp/kubens_v{{ kubectx_version }}_linux_x86_64.tar.gz"
        state: absent
      when: localbinkubens.stat.checksum is not defined or localbinkubens.stat.checksum != kubens_bin_checksum

    - name: "download kubens zsh completion"
      ansible.builtin.get_url:
        url: "https://raw.githubusercontent.com/ahmetb/kubectx/master/completion/_kubens.zsh"
        dest: "/usr/share/zsh/site-functions"
        mode: 0644
        checksum: "{{ kubens_comp_checksum }}"

    - name: check if k9s is installed
      ansible.builtin.stat:
        path: /usr/local/bin/k9s
        checksum_algorithm: sha256
      register: localbink9s

    - name: "download k9s {{ k9s_version }}"
      ansible.builtin.get_url:
        url: "https://github.com/derailed/k9s/releases/download/v{{ k9s_version }}/k9s_Linux_amd64.tar.gz"
        dest: "/tmp/k9s_Linux_x86_64.tar.gz"
        mode: 0644
        checksum: "{{ k9s_checksum }}"
      when: localbink9s.stat.checksum is not defined or localbink9s.stat.checksum != k9s_bin_checksum

    - name: "unpack k9s {{ k9s_version }}"
      ansible.builtin.unarchive:
        src: "/tmp/k9s_Linux_x86_64.tar.gz"
        dest: /usr/local/bin
        include: k9s
        owner: root
        group: root
      when: localbink9s.stat.checksum is not defined or localbink9s.stat.checksum != k9s_bin_checksum

    - name: "delete downloaded k9s {{ k9s_version }} tarball"
      ansible.builtin.file:
        name: "/tmp/k9s_Linux_x86_64.tar.gz"
        state: absent
      when: localbink9s.stat.checksum is not defined or localbink9s.stat.checksum != k9s_bin_checksum

    - name: create k9s config dir
      ansible.builtin.file:
        path: "{{ homedir }}/.config/k9s"
        owner: "{{ username }}"
        group: "{{ username }}"
        state: directory
        mode: 0755

    - name: "add k9s view for {{ username }}"
      ansible.builtin.copy:
        src: "{{ filesdir }}/k9s-views.yml"
        dest: "{{ homedir }}/.config/k9s/views.yml"
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0644

    - name: "add solarized theme on k9s for {{ username }}"
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/derailed/k9s/master/skins/solarized_dark.yml
        dest: "{{ homedir }}/.config/k9s/skin.yml"
        checksum: sha256:12192aa206923967b1ee0003a5bbf6d5c6f376bde30354a9ace10bd858448952
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: 0644

    - name: "add zsh-kubectl-promt for {{ username }}"
      become_user: "{{ username }}"
      ansible.builtin.git:
        repo: https://github.com/superbrothers/zsh-kubectl-prompt.git
        dest: "{{ homedir }}/.local/share/zsh-kubectl-prompt"
        version: v1.4.0

    - name: "install talosctl {{ talosctl_version }}"
      ansible.builtin.get_url:
        url: "https://github.com/siderolabs/talos/releases/download/v{{ talosctl_version }}/talosctl-linux-amd64"
        dest: "/usr/local/bin/talosctl"
        mode: 0555
        checksum: "{{ talosctl_checksum }}"
